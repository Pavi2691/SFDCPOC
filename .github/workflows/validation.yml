# Unique name for this workflow
name: Validate PR

on:
    # The workflow will run whenever an event happens on a pull request
    pull_request:
      types: [ closed ]
      branches:
        - Develop
      # To trigger for changes to the force-app directory
      #paths:
      #  - 'force-app/**'
            

# Jobs to be executed when the above conditions are met
jobs:
    # This is the name of the job.
    validate-on-org:
        runs-on: ubuntu-latest
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
                         
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # Install the SFDX-Git-Delta plugin-This allows us to extract a package.xml with the metadata that has changed between commits. 

            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Install java 
            - name: 'Check java version'
              run: java -version

            # The URL is stored in the Github Secret named SFDX_INTEGRATION_URL is copied to text file
            - name: 'Populate auth file with SFDX_URL secret of integration org'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

            # Authenticate to org using the URL stored in the text file
            - name: 'Authenticate to Integration Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s

            # Fetch the commit Id of the last successful deployment from the custom settings and create the differential package.xml
            - name: 'Create the differential package.xml'
              run: |
                  cd test
                  sfdx force:apex:execute -f Customsett.apex > fetchCommit.txt
                  value=`grep -i 'commitId__c=' fetchCommit.txt | awk '{print $NF}'`
                  str=${value#*=}
                  GitCommitID=${str%?}
                  echo $GitCommitID
                  cd ..
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "${GitCommitID}" --output changed-sources/ --generate-delta --source force-app/
                  cat changed-sources/package/package.xml

            # Specify the testlevel to run the apex test classes

            - name: 'Validate delta changes'
              run: |
                  sfdx force:source:deploy -p "changed-sources/force-app" --testlevel RunLocalTests --checkonly --ignorewarnings --verbose > DeploymentID.txt
                  cat DeploymentID.txt
                  depID=`grep -i 'Deploy ID: ' DeploymentID.txt | awk '{print $NF}'`
                  echo $depID

            # Run the Static Code analyzer

            - name: 'Run PMD scan'
              run: echo "This stage is to run the PMD scan and fail the build based on analysis"

            # Deploy the changes
            - name: 'Deploy the delta changes'
              run: sfdx force:source:deploy -p "changed-sources/force-app" --testlevel RunLocalTests --json

            # Update the commit id in the custom settings for successful deployment
            - name: 'Update Commit Id'
              run: |
                  commitid=`git log | head -n 1 | cut -d " " -f 2`
                  echo $commitid
                  cd test
                  sed -e "s/GitCommitID/$commitid/g" updateCustomsett.apex > newupdateCustomsett.apex
                  cat updateCustomsett.apex
                  cat newupdateCustomsett.apex
                  sfdx force:apex:execute -f newupdateCustomsett.apex